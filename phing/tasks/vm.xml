<project name="vm" default="vm">

  <target name="vm" description="Installs requirements, initializes, and boots DrupalVM.">

    <!--Initialize DrupalVM for this project if necessary.-->
    <if>
      <not><available file="${repo.root}/Vagrantfile"/></not>
      <then>
        <phingcall target="vm:project:init"/>
      </then>
    </if>

    <!--Initialize DrupalVM for this machine if necessary.-->
    <if>
      <not><equals arg1="${drush.aliases.local}" arg2="${project.machine_name}.local"/></not>
      <then>
        <phingcall target="vm:local:init"/>
      </then>
    </if>

    <if>
      <not><equals arg1="${vm.boot}" arg2="false"/></not>
      <then>
        <phingcall target="vm:up"/>
      </then>
    </if>
  </target>


  <target name="vm:local:init" depends="setup:drupal:settings" description="Initializes DrupalVM for this machine." hidden="true">
    <!-- Sadly this wipes out comments in the file. -->
    <echo>Updating ${blt.config-files.local}...</echo>
    <exec dir="${repo.root}" command="${composer.bin}/drupal yaml:update:value ${blt.config-files.local} drush.default_alias '${project.machine_name}.local'" logoutput="true" checkreturn="true" level="${blt.exec_level}" passthru="true"/>
    <exec dir="${repo.root}" command="${composer.bin}/drupal yaml:update:value ${blt.config-files.local} drush.aliases.local '${project.machine_name}.local'" logoutput="true" checkreturn="true" level="${blt.exec_level}" passthru="true"/>
    <!-- Load new values into Phing. -->
    <property file="${blt.config-files.local}" override="true" logoutput="false"/>

    <echo>${blt.config-files.local} has been modified.</echo>
    <echo>drush.default_alias has been set to ${project.machine_name}.local</echo>
    <echo>drush.aliases.local has been set to ${project.machine_name}.local</echo>
  </target>

  <target name="vm:project:init" description="Initializes Drupal VM for this project." hidden="true">
    <echo>Creating a drush alias for the new VM.</echo>
    <exec dir="${repo.root}" command="cat ${blt.root}/scripts/drupal-vm/drupal-vm.aliases.drushrc.php >> ${repo.root}/drush/site-aliases/aliases.drushrc.php" logoutput="true" checkreturn="true" level="${blt.exec_level}"/>
    <reflexive>
      <fileset dir="${repo.root}">
        <include name="drush/site-aliases/aliases.drushrc.php" />
      </fileset>
      <filterchain>
        <expandproperties />
      </filterchain>
    </reflexive>

    <echo>Creating a config.yml file for Drupal VM.</echo>
    <mkdir dir="${repo.root}/box" mode="755"/>
    <copy file="${blt.root}/scripts/drupal-vm/config.yml" tofile="${repo.root}/box/config.yml" verbose="true">
      <filterchain>
        <expandproperties />
      </filterchain>
    </copy>

    <echo>Creating a Vagrantfile.</echo>
    <copy file="${blt.root}/scripts/drupal-vm/Vagrantfile" todir="${repo.root}" verbose="true"/>

    <echo>Adding geerlingguy/drupal-vm to composer dev dependencies.</echo>
    <exec dir="${repo.root}" command="composer require --dev geerlingguy/drupal-vm:~4.0" logoutput="true" checkreturn="true" level="${blt.exec_level}" passthru="true"/>

    <echo></echo>
    <echo>A new "box" directory and a Vagrantfile have been added to ${repo.root}</echo>
    <echo></echo>
    <echo>To customize the VM, follow the Quick Start Guide in Drupal VM's README:</echo>
    <echo>https://github.com/geerlingguy/drupal-vm#quick-start-guide</echo>
    <echo></echo>
    <echo>To run drush commands against the VM, use the @${drush.aliases.local} alias.</echo>
    <echo>You may pin yourself to this alias using "drush use @${drush.aliases.local}"</echo>
  </target>

  <target name="vm:requirements" description="Checks and conditionally installs DrupalVM requirements." hidden="true">

    <echo>Operating system is ${os.name}</echo>

    <!-- Check for VirtualBox. -->
    <exec dir="${repo.root}" command="command -v VirtualBox >/dev/null 2>&amp;1" returnProperty="virtualbox.missing" logoutput="true" checkreturn="false"/>
    <if>
      <istrue value="${virtualbox.missing}"/>
      <then>
        <echo>Please install all dependencies for Drupal VM by following the Quickstart Guide:</echo>
        <echo>https://github.com/geerlingguy/drupal-vm#quick-start-guide</echo>
        <fail message="VirtualBox is missing or is not installed."/>
      </then>
    </if>

    <!-- Check for vagrant. -->
    <exec dir="${repo.root}" command="command -v vagrant >/dev/null 2>&amp;1" returnProperty="vagrant.missing" logoutput="true" checkreturn="false"/>
    <if>
      <istrue value="${vagrant.missing}"/>
      <then>
        <echo>Please install all dependencies for Drupal VM by following the Quickstart Guide:</echo>
        <echo>https://github.com/geerlingguy/drupal-vm#quick-start-guide</echo>
        <fail message="Vagrant is not installed."/>
      </then>
    </if>

    <exec dir="${repo.root}" command="vagrant plugin list | grep vagrant-hostsupdater" returnProperty="vagrant.hostsupdater.missing"/>
    <!--Check for hostsupdater plugin for Vagrant-->
    <if>
      <istrue value="${vagrant.hostsupdater.missing}"/>
      <then>
        <echo>The vagrant-hostsupdater plugin is not installed! Attempting to install it...</echo>
        <exec dir="${repo.root}" command="vagrant plugin install vagrant-hostsupdater" logoutput="true" checkreturn="true" level="${blt.exec_level}" passthru="true"/>
      </then>
    </if>

  </target>

  <target name="vm:up" depends="vm:requirements" hidden="true" description="Boots DrupalVM.">
    <exec dir="${repo.root}" command="vagrant up" logoutput="true" checkreturn="true" level="${blt.exec_level}" passthru="true" />
  </target>

</project>
