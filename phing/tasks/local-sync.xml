<project name="local" default="local:setup">

  <target name="local:drupal:install" description="Installs a specific Drupal site using local drush alias.">
    <phingcall target="setup:drupal:install">
      <property name="drush.alias" value="${drush.aliases.local}" />
    </phingcall>
  </target>

  <target name="local:refresh" description="Refreshes local environment from upstream testing database." depends="setup:build, local:sync, local:update"/>

  <target name="local:setup" description="Install dependencies, builds docroot, installs Drupal; uses local drush alias.">
    <phingcall target="setup">
      <property name="drush.alias" value="${drush.aliases.local}" />
      <param name="environment" value="local"/>
    </phingcall>
  </target>

  <!-- Wrapper for local:sync:db and local:sync:files. -->
  <target name="local:sync" description="Synchronize local environment from remote (remote --> local).">
    <phingcall target="local:sync:db"/>
    <if>
      <!-- File sync is optional, and by default sync.files is false. -->
      <istrue value="${sync.files}"/>
      <then>
        <phingcall target="local:sync:files"/>
      </then>
    </if>
  </target>

  <target name="local:sync:db" description="Synchronize local database from remote (remote --> local)."
          depends="setup:drupal:settings">
    <drush command="cc drush"/>
    <drush command="sql-drop"/>
    <if>
      <equals arg1="${drush.sanitize}" arg2="true"/>
      <then>
        <drush command="sql-sync" alias="">
          <option name="structure-tables-key">lightweight</option>
          <option name="create-db"/>
          <option name="sanitize"/>
          <param>@${drush.aliases.remote}</param>
          <param>@${drush.aliases.local}</param>
        </drush>
      </then>
      <else>
        <drush command="sql-sync" alias="">
          <option name="structure-tables-key">lightweight</option>
          <option name="create-db"/>
          <param>@${drush.aliases.remote}</param>
          <param>@${drush.aliases.local}</param>
        </drush>
      </else>
    </if>

    <drush command="cache-clear">
      <param>drush</param>
    </drush>
    <drush command="cache-rebuild"/>
  </target>

  <target name="local:sync:files" description="Synchronize local files from remote (remote --> local).">
    <property name="site.name" value="${multisite.name}"/>
    <if>
      <!-- If ${multisite.name} is a list, assume we're syncing the default site's files. -->
      <contains string="${site.name}" substring=","/>
      <then>
        <property name="site.name" value="default" override="true"/>
      </then>
    </if>
    <drush command="rsync" alias="">
      <param>@${drush.aliases.remote}:%files/</param>
      <param>${docroot}/sites/${site.name}/files</param>
      <option name="exclude-paths">styles:css:js</option>
    </drush>
  </target>

  <target name="local:update" description="Update current database to reflect the state of the Drupal file system; uses local drush alias.">
    <phingcall target="setup:update">
      <property name="drush.alias" value="${drush.aliases.local}"/>
      <property name="environment" value="local"/>
    </phingcall>
  </target>

</project>
