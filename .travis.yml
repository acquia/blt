---
language: php

os: linux
dist: bionic

version: ~> 1.0

php: "7.3"

addons:
  chrome: stable

cache:
  directories:
    - "$HOME/.drush/cache"
    - "$HOME/.rvm"
    - "${TMPDIR:-/tmp}/phpstan/cache"

services:
  - mysql

env:
  global:
    # ORCA configuration.
    - ORCA_SUT_NAME=acquia/blt
    - ORCA_SUT_BRANCH=main
    - ORCA_VERSION=^3
    - ORCA_PHPCS_STANDARD=AcquiaDrupalStrict
    # Change to 1 to debug failed tests.
    - BLT_PRINT_COMMAND_OUTPUT=1

jobs:
  fast_finish: true
  include:
    - { env: ORCA_JOB=STATIC_CODE_ANALYSIS, name: "Static code analysis" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_PREVIOUS_MINOR, name: "Integrated test on previous minor Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_FROM_PREVIOUS_MINOR, name: "Integrated upgrade test from previous minor" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT, name: "Isolated test on current Drupal core version" }
    # To send PHPUnit test coverage data to Coveralls (coveralls.io), configure
    # your GitHub repository and uncomment the following line. The job on the
    # line immediately before is otherwise identical and can be removed. Note:
    # this setting implies ORCA_COVERAGE_ENABLE, which need not be set
    # separately.
    # @see https://github.com/acquia/orca/blob/master/docs/faq.md#coveralls
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_COVERALLS_ENABLE
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_COVERAGE_ENABLE
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERALLS_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
    #
    # To generate test coverage data to send somewhere other than Coveralls, use
    # the ORCA_COVERAGE_ENABLE variable instead.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERAGE_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT, name: "Integrated test on current Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR, name: "Integrated upgrade test to next minor Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV, name: "Integrated upgrade test to next minor dev Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV, name: "Isolated test on current dev Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT_DEV, name: "Integrated test on current dev Drupal core version" }
    - { env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN, name: "Loose deprecated code scan" }
    - { env: ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN, name: "Strict deprecated code scan" }
    - { env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB, name: "Deprecated code scan w/ contrib" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR, name: "Isolated test on next minor Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR, name: "Integrated test on next minor Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV, name: "Isolated test on next minor dev Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV, name: "Integrated test on next minor dev Drupal core version" }
    # Uncomment the following four lines to enable the corresponding tests once
    # the next major version of Drupal core has an alpha release or earlier.
    # Until then it's wasteful to use CI jobs on them, even if they exit early.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Isolated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Integrated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Isolated test on next major, latest minor dev Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Integrated test on next major, latest minor dev Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_BETA_OR_LATER, name: "Isolated upgrade test to next major beta-or-later Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV, name: "Isolated upgrade test to next major dev Drupal core version" }
  allow_failures:
    - env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV
    - env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN
    - env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV

before_install:
  - nvm use 12.13.1
  - composer create-project --no-dev acquia/orca ../orca "$ORCA_VERSION"
  - ../orca/bin/travis/before_install.sh

install: ../orca/bin/travis/install.sh

before_script: ../orca/bin/travis/before_script.sh

script: ../orca/bin/travis/script.sh

before_cache: ../orca/bin/travis/before_cache.sh

after_success: ../orca/bin/travis/after_success.sh

after_failure: ../orca/bin/travis/after_failure.sh

after_script: ../orca/bin/travis/after_script.sh
