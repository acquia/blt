# Note that the example .travis.yml file for child projects lives in /install.
sudo: required
language: php
dist: trusty

php:
  - 5.6

matrix:
  fast_finish: true

env:
  global:
    - DEPLOY_SOURCE_BRANCH=8.x
    - COMPOSER_BIN=$TRAVIS_BUILD_DIR/vendor/bin
    - BLT_DIR=$TRAVIS_BUILD_DIR

cache:
  bundler: true
  apt: true
  directories:
  - "$HOME/.composer/cache"
  - "$HOME/.console"
  - "$HOME/.drush/cache"
  - "$HOME/.nvm"
  - "vendor"

addons:
  ssh_known_hosts:
    - svn-5223.devcloud.hosting.acquia.com

before_install:
  # Decrypt private SSH key id_rsa_blt.enc, save as ~/.ssh/id_rsa_blt.
  - if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then openssl aes-256-cbc -K $encrypted_c0b166e924da_key -iv $encrypted_c0b166e924da_iv -in id_rsa_blt.enc -out ~/.ssh/id_rsa -d; chmod 600 ~/.ssh/id_rsa; ls -lash ~/.ssh; eval "$(ssh-agent -s)"; ssh-add ~/.ssh/id_rsa; fi
  - source $BLT_DIR/scripts/travis/before_install

install:
  - source $BLT_DIR/scripts/travis/install

before_script:
  - source $BLT_DIR/scripts/travis/before_script

script:
  # Ensure code quality of 'blt' itself.
  - phpcs --standard=./vendor/drupal/coder/coder_sniffer/Drupal/ruleset.xml tests
  # Generate a new 'blt-project' project.
  - cp -R blt-project ../
  - cd ../blt-project
  - git init
  - git add -A
  # Commit so that subsequent git commit tests have something to amend.
  - git commit -m 'Initial commit.'
  # BLT is the only dependency at this point. Install it.
  - composer install -v
  - export PATH=$TRAVIS_BUILD_DIR/../blt-project/vendor/bin:$PATH
  # The local.hostname must be set to 127.0.0.1:8888 because we are using drush runserver to run the site on Travis CI.
  - yaml-cli update:value blt/project.yml project.local.hostname '127.0.0.1:8888'
  # Execute all updates with fake "dev" => "dev" version specs. This must be done manually since BLT was not installed prior to this.
  - blt-console blt:update dev dev $(pwd) --yes
  # BLT added new dependencies for us, so we must update.
  - composer update
  # Create a .travis.yml, just to make sure it works. It won't be executed.
  - blt ci:travis:init
  - blt ci:pipelines:init
  # Disable Lightning tests on pull requests.
  - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then printf "behat.paths: [ \${repo.root}/tests/behat ]" >> blt/project.yml; fi'
  - cat blt/project.yml
  # Call targets in the new 'blt-project' project.
  - blt ci:build:validate:test -Dcreate_alias=false -Dbehat.run-server=true -Dbehat.launch-phantom=true -Dblt.verbose=true
  # Run 'blt-project' tests.
  - phpunit ../blt/tests/phpunit --group blt-project
  # Initialize ACSF config.
  - blt acsf:init
  # Ensure that the doctor doesn't report any problems at this point.
  - composer global require "hirak/prestissimo:^0.3"
  # Define BLT's deployment endpoints.
  - yaml-cli update:value blt/project.yml git.remotes.0 bolt8@svn-5223.devcloud.hosting.acquia.com:bolt8.git
  - yaml-cli update:value blt/project.yml git.remotes.1 git@github.com:acquia-pso/blted8.git
  - blt doctor
  # Add Drupal VM config to repo.
  - blt vm -Dvm.boot='false'
  # Update blt symlink prior to deploy. Changing from ../blt to ../../blt.
  - sed -i 's/\.\.\/blt/\.\.\/\.\.\/blt/g' composer.json
  - sed -i 's/\.\.\/blt/\.\.\/\.\.\/blt/g' composer.lock
  # Deploy build artifact.
  - blt deploy:build
  # Run 'blt' phpunit tests, excluding deploy-push tests.
  - phpunit $BLT_DIR/tests/phpunit --group blt --exclude-group deploy-push

deploy:
  - provider: script
    script: $BLT_DIR/scripts/travis/deploy_branch && phpunit $BLT_DIR/tests/phpunit --group=deploy
    skip_cleanup: true
    on:
      branch: $DEPLOY_SOURCE_BRANCH
      php: 5.6
