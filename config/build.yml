# @todo Move to subkey of tests.
behat:
  config: ${repo.root}/tests/behat/local.yml
  haltonerror: true
  strict: true
  profile: local
  # If true, `drush runserver` will be used for executing tests.
  run-server: false
  # The URL of selenium server. Must correspond with setting in behat's yaml config.
  selenium:
    port: 4444
    url: http://127.0.0.1:${behat.selenium.port}/wd/hub
  # This is used for ad-hoc creation of a server via `drush runserver`.
  server:
    port: 8888
    url: http://127.0.0.1:${behat.server.port}
  # An array of paths with behat tests that should be executed.
  paths:
    # - ${docroot}/modules
    # - ${docroot}/profiles
    - ${repo.root}/tests/behat
  tags: '~ajax&&~experimental&&~lightningextension'
  extra: ''
  # May be selenium or phantomjs.
  web-driver: selenium

bin.path: vendor/bin

blt:
  update:
    ignore-existing-file: ${blt.root}/scripts/blt/ignore-existing.txt
  config-files:
    project: ${repo.root}/blt/project.yml
    local: ${repo.root}/blt/project.local.yml
    example-local: ${repo.root}/blt/example.project.local.yml
    schema-version: ${repo.root}/blt/.schema_version
    multisite: ${docroot}/sites/${site}/site.yml
  command-cache-dir: ${blt.root}/cache/commands

composer:
  bin: ${repo.root}/${bin.path}
  extra: ''

cm:
  # Possible values: core-only, config-split, features, none.
  strategy: config-split
  core:
    # The parent directory for configuration directories, relative to the docroot.
    path: ../config
    # The default config key to use for imports. This is the key used in Drupal's global $config_directories variable.
    # E.g., $config_directories['sync']. It must have a corresponding key in cm.core.dirs. E.g., `cm.core.dirs.sync`.
    key: sync
    # A different config key is used by the deploy:update step, which is executed on Acquia Cloud.
    # This must also have a corresponding value at cm.core.dirs.vcs.
    # @see https://github.com/acquia/blt/issues/678
    deploy-key: vcs
    dirs:
      # Corresponding value is defined in config.settings.php.
      sync:
        path: ${cm.core.path}/default
      vcs:
        path: ${cm.core.path}/default
  features:
    no-overrides: true

deploy:
  # If true, dependencies will be built during deploy. If false, you should commit dependencies directly.
  build-dependencies: true
  dir: ${repo.root}/deploy
  exclude_file: ${blt.root}/scripts/blt/deploy/deploy-exclude.txt
  exclude_additions_file: ${repo.root}/blt/deploy-exclude-additions.txt
  gitignore_file: ${blt.root}/scripts/blt/deploy/.gitignore
  git:
    # If true, deploys will fail if there are uncommitted changes.
    failOnDirty: true

# File and Directory locations.
docroot.relative: ${repo.root.relative}/docroot
docroot: ${repo.root}/docroot

# Drupal Account Credentials. These are used for installing Drupal.
drupal:
  account.mail: no-reply@acquia.com
  locale: en
  local_settings_file: ${docroot}/sites/${site}/settings/local.settings.php
  settings_file: ${docroot}/sites/${site}/settings.php

drush:
  bin: ${composer.bin}/drush
  dir: ${docroot}
  uri: default
  assume: yes
  passthru: yes
  logoutput: yes
  sanitize: true

git:
  # The value of a hook should be the file path to a directory containing an
  # executable file named after the hook.
  # Changing a hook value to 'false' will disable it.
  hooks:
    pre-commit: ${blt.root}/scripts/git-hooks
    commit-msg: ${blt.root}/scripts/git-hooks

# You may provide a list of sites for BLT to run commands against,
# otherwise BLT will generate this sites list based on directories
# in ${docroot}/sites/*/
#
# multisites
#   - default

# @todo Move to subkey of tests.
reports:
  localDir: ${repo.root}/reports
  remoteDir: reports

# @todo Move to subkey of validate.
phpcs:
  filesets:
    - files.php.custom.modules
    - files.php.tests
    - files.php.custom.themes
    - files.frontend.custom.themes
  haltonerror: true
  haltonwarning: true

#$ @todo Move to subkey of fix.
phpcbf:
  filesets:
    - files.php.custom.modules
    - files.php.tests
    - files.php.custom.themes
    - files.frontend.custom.themes

# @todo Move to subkey of tests.
phpunit:
  - path: '${repo.root}/tests/phpunit'
    config: null
  # Customization for one or more custom phpunit test locations
  # and if the core (or custom) config file should be included as a -c parameter.
  # - path: '${docroot}/custom/modules/<your_module>/tests'
  #   config: '${docroot}/core/phpunit.xml.dist'

project:
  local:
    uri: ${project.local.protocol}://${project.local.hostname}

sync:
  # By default, files are not synced during local:sync.
  # Set this value to 'true' or pass -Dsync.files=true
  # to override this behavior.
  files: false

# Custom tasks that are triggered at pre-defined times in the build process.
# The tasks hook into BLT's existing commands.
target-hooks:
  # Executed when front end dependencies should be installed.
  frontend-setup:
    # E.g., ${docroot}/sites/all/themes/custom/mytheme.
    dir: ${docroot}
    # E.g., `npm install` or `bower install`.
    command: null
  # Executed when front end assets should be generated.
  frontend-build:
    # E.g., ${docroot}/sites/all/themes/custom/mytheme.
    dir: ${docroot}
    # E.g., `npm run build`.
    command: null
  frontend-test:
    # E.g., ${docroot}/sites/all/themes/custom/mytheme.
    dir: ${docroot}
    # E.g., `npm test`.
    command: null
  pre-commit:
    # E.g., ${docroot}
    dir: ${docroot}
    # E.g., `php -l`.
    command: null
  # Executed before configuration is imported.
  pre-config-import:
    dir: ${docroot}
    command: null
  # Executed after deployment artifact is created.
  post-deploy-build:
    dir: '${deploy.dir}/docroot'
    command: null
  # Executed after setup:build is run.
  post-setup-build:
    dir: ${docroot}
    command: null
  # Executed after deploy:push-all is run.
  post-deploy:
    dir: ${docroot}
    command: null

validate:
  lint:
    filesets:
      - files.php.custom.modules
      - files.php.custom.themes
      - files.php.tests
  twig:
    filesets:
      - files.twig
  yaml:
    filesets:
      - files.yaml
